ulimit -n 4096

ZSH=$HOME/.oh-my-zsh
ZSH_THEME="secwall"
HIST_IGNORE_SPACE=1
plugins=(colored-man git knife knife_ssh osx pass python sbt scala vagrant)

source $ZSH/oh-my-zsh.sh

setopt hist_ignore_space
setopt hist_ignore_all_dups

fpath=(/usr/local/share/zsh-completions $fpath)

bindkey '^[[A'  up-line-or-search
bindkey '^[[B'  down-line-or-search

export EDITOR=vim

# Customize to your needs...
export PATH=$HOME/.cabal/bin:/usr/local/bin:$PATH:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin
export PYTHONPATH=/usr/local/lib/python2.7/site-packages:$PYTHONPATH

# Pyenv setup
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi

# Start/attach to tmux on remote host
ssht () {
    if [[ "$2" == "" ]]
    then
        ssh -A "$1" -t 'if type zsh > /dev/null; then export SHELL=/bin/zsh; fi; tmux attach -t secwall || tmux new -s secwall || $SHELL'
    else
        ssh $*
    fi
}

compdef ssht=ssh
alias ssh='ssht'

# Install my dotfiles on remote host
dotf-install () {
    for H
    do
        echo "Installing to $H"
        scp -r ~/.vimrc ~/.vim ~/.tmux.conf ~/.zshrc ~/.oh-my-zsh ~/.htoprc $H:
    done
}

compdef dotf-install=ssh

ssh-copy-id () {
    for H
    do
        cat ~/.ssh/id_rsa.pub | ssh $H "mkdir -p .ssh; chmod 700 .ssh; cat >> .ssh/authorized_keys; chmod 600 .ssh/authorized_keys"
    done
}

compdef ssh-copy-id=ssh

# MPlayerX alias for console usage
alias 'mplayer'='/Applications/MPlayerX.app/Contents/MacOS/MPlayerX'

# pypy alias
alias 'pypy'='/usr/local/Cellar/pypy/2.2.1/libexec/bin/pypy'

# rebar alias
alias 'rebar'='~/Documents/dev/utils/rebar'

# rbenv setup
eval "$(rbenv init -)"

# gpg-agent setup
if test -f $HOME/.gpg-agent-info && kill -0 `cut -d: -f 2 $HOME/.gpg-agent-info` 2>/dev/null; then
    GPG_AGENT_INFO=`cat $HOME/.gpg-agent-info`
    export GPG_AGENT_INFO
else
    eval `gpg-agent --daemon`
    echo $GPG_AGENT_INFO >$HOME/.gpg-agent-info
fi

# show all packages without deps (homebrew)
alias 'brew-world'='for i in `brew list`; do USES=`brew uses --installed $i`; if [ "$USES" = "" ]; then echo $i; fi; done'
