ulimit -n 16384

DISABLE_AUTO_UPDATE=true
ZSH=$HOME/.oh-my-zsh
ZSH_THEME="secwall"
HIST_IGNORE_SPACE=1
plugins=(git python brew vagrant golang)

source $ZSH/oh-my-zsh.sh

setopt hist_ignore_space
setopt hist_ignore_all_dups

fpath=(/usr/local/share/zsh-completions $fpath)

bindkey '^[[A'  up-line-or-search
bindkey '^[[B'  down-line-or-search

export EDITOR=/usr/local/bin/nvim

# Customize to your needs...
export PATH=$HOME/Documents/dev/utils:/Developer/NVIDIA/CUDA-9.0/bin:/usr/local/bin:$PATH:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin

# Pyenv setup
export PYTHON_CONFIGURE_OPTS="--enable-framework"
export PYENV_ROOT="$HOME/.pyenv"

if [ -d "$PYENV_ROOT" ]
then
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
    PYTHON_FULL_VERSION=$(python --version | awk '{print $NF};')
    PYTHON_SHORT_VERSION=$(echo $PYTHON_FULL_VERSION | cut -d\. -f1,2)
    export PATH=$PATH:$HOME/.pyenv/versions/$PYTHON_FULL_VERSION/Python.framework/Versions/$PYTHON_SHORT_VERSION/bin
fi

export CGO_CFLAGS_ALLOW='-objcmt-migrate-all'
export GOPATH=$HOME/.go
export PATH=$GOPATH/bin:$PATH

# Start/attach to tmux on remote host
ssht () {
    if [[ "$2" == "" ]]
    then
        ssh -A "$1" -t 'tmux attach -t secwall || tmux new -s secwall || /bin/bash'
    else
        ssh $*
    fi
}

compdef ssht=ssh
alias ssh='ssht'

# Install my dotfiles on remote host
dotf-install () {
    for H
    do
        echo "Installing to $H"
        rsync -rzvp --chmod=og-rwx --copy-links --copy-dirlinks ~/.dotf-dist/ $H:
    done
}

compdef dotf-install=ssh

ssh-copy-id () {
    for H
    do
        cat ~/.ssh/id_rsa.pub | ssh $H "mkdir -p .ssh; chmod 700 .ssh; cat >> .ssh/authorized_keys; chmod 600 .ssh/authorized_keys"
    done
}

compdef ssh-copy-id=ssh

# show all packages without deps (homebrew)
alias 'brew-world'='for i in `brew list --formula`; do USES=`brew uses --installed $i`; if [ "$USES" = "" ]; then echo $i; fi; done'

brew-dep-rm () {
    if [[ "$1" != "" ]]
    then
        TMP_FNAME="/tmp/$0_$RANDOM.list"
        for i in $*
        do
            brew-world | grep -v $i > $TMP_FNAME
            brew rm $i
            CUR_DEPS="`brew-world | grep -v -f $TMP_FNAME`"
            while [[ "$CUR_DEPS" != "" ]]
            do
                brew-dep-rm $CUR_DEPS
            done
        done
        rm -f "$TMP_FNAME"
    fi
}

brew-up () {
    brew update && brew upgrade && brew upgrade --cask --greedy && brew cleanup -s
}

alias 'vim'='nvim'

# enable fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

compinit
